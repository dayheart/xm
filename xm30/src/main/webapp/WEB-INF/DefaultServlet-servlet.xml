<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<mvc:annotation-driven
		enable-matrix-variables="true" />
	<context:component-scan
		base-package="com.dayheart,kisb.sb.mdi.cm" /> <!-- 빈의 생성 묵시적, bean은 명시적 -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- Connection Pool -->
	<!-- #1 
	<bean id="dataSource" class="org.apahce.commons.dbcp.BasicDataSource" destroy-method="close"> 
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/> 
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:example"/> 
		<property name="username" value="user" /> <property name="password" value="password"/> 
	</bean>
	 -->
	<!-- #2 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="jdbc/oracle" /> 
		<property name="resourceRef" value="true" /> 
	</bean>
	 -->
	<!-- #3 -->
	<!-- <jee:jndi-lookup id="datasource" jndi-name="jdbc/oracle" resource-ref="true" />  -->
	<jee:jndi-lookup id="datasource" jndi-name="jdbc/oracle" resource-ref="true" />
	<jee:jndi-lookup id="oracleDS" jndi-name="jdbc/oracle" resource-ref="true" />
	<!-- 
	<jee:jndi-lookup id="mysqlDS" jndi-name="jdbc/mysql" resource-ref="true" />
	<jee:jndi-lookup id="mssqlDS" jndi-name="jdbc/mssql" resource-ref="true" />
	<jee:jndi-lookup id="postgresDS" jndi-name="jdbc/postgres" resource-ref="true" />
	 -->
	 
	<!-- 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:ORCLCDB"></property>
		<property name="username" value="webstore"></property>
		<property name="password" value="webstore"></property>
	</bean>
	 -->
	 
	<bean id="indexedParamJdbcTempate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<qualifier value="indexedParamJdbcTempate" />
		<constructor-arg>
			<ref bean="oracleDS" />
		</constructor-arg>
	</bean>

	<!-- for @Autowired NamedParameterJdbcTemplate -->
	<bean id="namedParamJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<qualifier value="namedParamJdbcTemplate" />
		<constructor-arg>
			<ref bean="oracleDS" />
		</constructor-arg>
		<!-- <property name="dataSource" ref="oracleDS" /> -->
	</bean>
	
	<!-- SPRING MYBATIS -->
	<!-- 
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="oracleDS" />
		<property name="mapperLocations"
			value="classpath:/mapper/*.xml" />
	</bean>
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	 -->
	<!-- SPRING MYBATIS -->

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" /> <!-- src/main/resource/ messages .properties -->
	</bean>

	<mvc:resources location="/resources/js/" mapping="/js/**" />

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="10240000"></property>
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>

	<bean id="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="prettyPrint" value="true" />
	</bean>
	<!-- <bean id="xmlView" class="org.springframework.web.servlet.view.xml.MarshallingView"> 
		<constructor-arg> <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> 
		<property name="classesToBeBound"> <list> <value>com.dayheart.ansisql.domain.Salesrep</value> 
		</list> </property> </bean> </constructor-arg> </bean> -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<list>
				<ref bean="jsonView" />
				<!-- <ref bean="xmlView"/> -->
			</list>
		</property>
	</bean>

	<!-- <jee:remote-slsb id="helloEJB30" business-interface="com.dayheart.ejb30.Hello" 
		jndi-name="ejb/HelloEJB30" /> -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/config/tier.properties</value> <!-- @value("{INITIAL_CONTEXT_FACTORY}") -->
			</list>
		</property>
	</bean>
	<!--
	<util:properties id="tier"
		location="classpath:/config/tier.properties" />
	<util:properties id="extjndi"
		location="classpath:/config/ext-jndi.properties" />
	<util:properties id="exthttp"
		location="classpath:/config/ext-http.properties" />
	 --> 
	<!-- @value("#{extjndi['INITIAL_CONTEXT_FACTORY']}") -->
		
	<!-- 
	<jee:remote-slsb id="httpGW"
		business-interface="com.dayheart.ejb30.HttpGateway" jndi-name="HttpGW">
		<jee:environment> 
			java.naming.factory.initial=jeus.jndi.JEUSContextFactory 
			java.naming.factory.url.pkgs=jeus.jndi.jns.url 
			java.naming.provider.url=dayheart02.iptime.org:6736 
			java.naming.security.principal=administrator 
			java.naming.security.credentials=jeusadmin 
		</jee:environment>
	</jee:remote-slsb>
	 -->
	 
	<!-- 
	<jee:remote-slsb id="methodGW"
		business-interface="com.dayheart.ejb30.MethodGateway"
		jndi-name="MethodGW">
		<jee:environment> 
			java.naming.factory.initial=jeus.jndi.JEUSContextFactory 
			java.naming.factory.url.pkgs=jeus.jndi.jns.url 
			java.naming.provider.url=dayheart02.iptime.org:6736 
			java.naming.security.principal=administrator 
			java.naming.security.credentials=jeusadmin 
		</jee:environment>
	</jee:remote-slsb>
	<jee:jndi-lookup id="jmsQueueConnectionFactory"
		jndi-name="jms/QueueConnectionFactory" resource-ref="true">
		<jee:environment> 
			java.naming.factory.initial=jeus.jndi.JEUSContextFactory 
			java.naming.factory.url.pkgs=jeus.jndi.jns.url 
			java.naming.provider.url=dayheart02.iptime.org:6736 
			java.naming.security.principal=administrator 
			java.naming.security.credentials=jeusadmin 
		</jee:environment>
	</jee:jndi-lookup>
	 -->
	 
	<!-- A dynamic resolver -->
	<!-- 
	<bean id="jmsDynamicDestResolver"
	class="org.springframework.jms.support.destination.DynamicDestinationResolver" />
	 -->
	<!-- jmsTemplate.send("myQueue", messageCreator); -->
	<!-- A JNDI resolver -->
	<!-- 
	<bean id="jmsJndiDestResolver"
	class="org.springframework.jms.support.destination.JndiDestinationResolver" />
	 -->
	 
	<!-- jmsTemplate.send("java:comp/env/jms/myQueue", messageCreator); -->
	<!-- 
	<bean id="jmsQueueTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref bean="jmsQueueConnectionFactory" />
		</property>
		<property name="destinationResolver">
			<ref bean="jmsDynamicDestResolver" />
		</property>
	</bean>
	 -->
	
	<!-- MBP -->
	<!--
	<bean id="messageListener"
	class="com.dayheart.mfj.jms.SampleQueListener" />
	<bean id="jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory"
			ref="jmsQueueConnectionFactory" />
		<property name="destinationName" value="ExamplesQueue" />
		<property name="messageListener" ref="messageListener" />
	</bean>
	 -->
	<!-- all request Intercepter -->
	<!-- 
	<mvc:interceptors>
		<bean
			class="com.packt.webstore.interceptor.ProcessingTimeLogInterceptor" />
	</mvc:interceptors>
	-->
	<!-- 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/MCI" />
			<mvc:mapping path="/COR" />
			<mvc:mapping path="/EAI" />
			<mvc:mapping path="/FEP" />
			<bean class="com.dayheart.interceptor.MappedTxLoggingInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	-->
</beans>
